version: '3.8'

services:
  file-server:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    container_name: personal-file-server
    ports:
      - "8443:8443"
      - "9090:9090"  # Metrics port
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - LOG_LEVEL=info
      - CONFIG_PATH=/app/config/server.json
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost:8443/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - fileserver-network

  # Optional: Add a reverse proxy
  nginx:
    image: nginx:alpine
    container_name: fileserver-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/ssl/certs:ro
    depends_on:
      - file-server
    networks:
      - fileserver-network
    profiles:
      - proxy

  # Optional: Add monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: fileserver-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - fileserver-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: fileserver-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - fileserver-network
    profiles:
      - monitoring

networks:
  fileserver-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data: